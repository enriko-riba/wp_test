const webpack = require('webpack');
const path = require('path');
const HtmlWebpackPlugin = require('html-webpack-plugin');
const ExtractTextPlugin = require('extract-text-webpack-plugin');
const UglifyJSPlugin = require('uglifyjs-webpack-plugin');
const CleanWebpackPlugin = require('clean-webpack-plugin');

const config = {
    entry: {
        main: "./src/main.ts",
        //common: ["jquery"] // vendor libraries bundle
    },
    output: {
        path: path.resolve(__dirname, 'dist'),
        filename: "bundle.js",
		//filename: "[name].[chunkhash].js",
		//chunkFilename: "[chunkhash].js"
    },

    // Enable sourcemaps for debugging webpack's output.
    devtool: "source-map",

    resolve: {
        extensions: [".ts", ".tsx", ".js", ".css", ".sccs"]
    },

    plugins: [
        new CleanWebpackPlugin(['dist']),
        new UglifyJSPlugin({parallel: true, sourceMap: true}),
        new HtmlWebpackPlugin({ template: './src/index.html', inject: true }),
        new ExtractTextPlugin("style.css"),      //  for scss/css
        // new webpack.optimize.CommonsChunkPlugin({
		// 	names: ["common", "manifest"]
		// })
    ],

    module: {
        loaders: [
            {
                test: /\.tsx?$/,
                loader: "ts-loader",
                exclude: /node_modules/
            },
            {
                enforce: "pre",
                test: /\.js$/,
                loader: "source-map-loader"
            },
            {
                test: /\.woff2?$|\.ttf$|\.eot$|\.svg$/,
                loader: "file-loader"
            },
            // Process SCSS / CSS
            // {
            //     test: /\.css$/i,
            //     use: ExtractTextPlugin.extract({
            //         fallback: 'style-loader',
            //         use: 'css-loader'
            //     }),
            // },
            {
                test: /\.scss$/i,
                exclude: /node_modules/,
                use: ExtractTextPlugin.extract({
                    use: ['css-loader', 'sass-loader']
                })
            }
        ]
    }
}

module.exports = config;